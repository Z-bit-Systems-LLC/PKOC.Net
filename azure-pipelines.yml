# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- main
- develop

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  major: 0
  minor: 0
  patch: 3
  AssemblyVersion: $(major).$(minor).$(patch)
  NugetVersion: $(major).$(minor).$(patch)-beta

steps:
- task: UseDotNet@2
  displayName: 'Install .NET 8 SDK'
  inputs:
    packageType: 'sdk'
    version: '8.x'

- task: DotNetCoreCLI@2
  displayName: 'dotnet build'
  inputs:
    command: 'build'
    projects: '**/*.csproj'
    arguments: '--configuration $(buildConfiguration)'
    versioningScheme: 'byEnvVar'
    versionEnvVar: 'AssemblyVersion'

- task: DotNetCoreCLI@2
  displayName: 'dotnet test'
  inputs:
    command: 'test'
    nobuild: true
    projects: '**/*Tests/*.csproj'
    arguments: '--configuration $(buildConfiguration)'

- task: ResharperCli@2
  displayName: 'ReSharper Inspection'
  inputs:
    solutionOrProjectPath: 'PKOC.Net.sln'
    failBuildLevelSelector: 'Warning'
    additionalArguments: '--build'

- task: DotNetCoreCLI@2
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
  displayName: 'dotnet pack'
  inputs:
    command: 'pack'
    arguments: '--configuration $(buildConfiguration)'
    packagesToPack: 'src/PKOC.Net/PKOC.Net.csproj'
    versioningScheme: 'byEnvVar'
    versionEnvVar: 'NugetVersion'

- task: PublishPipelineArtifact@1
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)'
